Class ->   java.lang.Class

Java provides a class with name Class in java.lang package. Instances of the class Class represent classes and interfaces in a running Java application. 
The primitive Java types (boolean, byte, char, short, int, long, float, and double), and the keyword void are also represented as Class objects.

It has no public constructor.
Class objects are constructed automatically by the Java Virtual Machine(JVM).
It is a final class, so we cannot extend it. 
The Class class methods are widely used in Reflection API.

 It contains various methods that provide information about the class or interface, such as its name, superclass, interfaces, fields, and methods.

getName(): Returns the name of the class or interface represented by this Class object.
getSimpleName(): Returns the simple name of the class or interface represented by this Class object.
getSuperclass(): Returns the superclass of the class represented by this Class object.
getInterfaces(): Returns an array of interfaces implemented by the class or interface represented by this Class object.
getField(String name): Returns a Field object that represents the public field with the specified name in the class or interface represented by this Class object.
getMethod(String name, Class<?>â€¦ parameterTypes): Returns a Method object that represents the public method with the specified name and parameter types in the class or interface represented by this Class object.
newInstance(): Creates a new instance of the class represented by this Class object using its default constructor.
isInstance(Object obj): Returns true if the specified object is an instance of the class or interface represented by this Class object, false otherwise.


