Class loader -> The Java ClassLoader is a part of the Java Runtime Environment that dynamically loads Java classes into the Java Virtual Machine. 
                The Java run time system does not need to know about files and file systems because of classloaders. Java classes aren’t loaded into memory all at once, but when required by an application. 
                At this point, the Java ClassLoader is called by the JRE and these ClassLoaders load classes into memory dynamically.

BootStrap ClassLoader:  Every JVM implementation must have a bootstrap class loader, capable of loading trusted classes. 
                        It loads core java API classes present in the “JAVA_HOME/jre/lib” directory. This path is popularly known as the bootstrap path
Extension ClassLoader: It is a child of the bootstrap class loader. It loads the classes present in the extensions directories “JAVA_HOME/jre/lib/ext”(Extension path) or any other directory specified by the java.ext.dirs system property. 
                       It is implemented in java by the sun.misc.Launcher$ExtClassLoader class.
System ClassLoader: It is a child of the extension class loader. It is responsible to load classes from the application classpath. It internally uses Environment Variable which mapped to java.class.path. 
                    It is also implemented in Java by the sun.misc.Launcher$AppClassLoader class.
