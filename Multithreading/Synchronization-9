Synchronization in Java

Java Synchronization is better option where we want to allow only one thread to access the shared resource.
       or
Synchronized method is used to lock an object for any shared resource.

Why use Synchronization?
The synchronization is mainly used to

To prevent thread interference.
To prevent consistency problem.

By Using Synchronized Method
By Using Synchronized Block
By Using Static Synchronization

**********************

Concept of Lock in Java

Synchronization is built around an internal entity known as the lock or monitor. Every object has a lock associated with it. 
By convention, a thread that needs consistent access to an object's fields has to acquire the object's lock before accessing them, and then release the lock when it's done with them

********************

Synchronized Block

Suppose we have 50 lines of code in our method, but we want to synchronize only 5 lines, in such cases, we can use synchronized block.
The system performance may degrade because of the slower working of synchronized keyword.
Java synchronized block is more efficient than Java synchronized method.

Syntax
synchronized (object reference expression) {     
  //code block     
}

********************

Static Synchronization

If you make any static method as synchronized, the lock will be on the class not on object.

Problem without static synchronization
Suppose there are two objects of a shared class (e.g. Table) named object1 and object2. In case of synchronized method and synchronized block there 
cannot be interference between t1 and t2 or t3 and t4 because t1 and t2 both refers to a common object that have a single lock. 
But there can be interference between t1 and t3 or t2 and t4 because t1 acquires another lock and t3 acquires another lock. 
We don't want interference between t1 and t3 or t2 and t4. Static synchronization solves this problem.


Synchronized block on a class lock:
The block synchronizes on the lock of the object denoted by the reference .class name .class.
A static synchronized method printTable(int n) in class Table is equivalent to the following declaration:

static void printTable(int n) {  
    synchronized (Table.class) {       // Synchronized block on class A  
        // ...  
    }  
}  
